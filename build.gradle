buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

configurations {
    shadow
    compile.extendsFrom shadow
}

group = 'live.moonmoon.launcher'
version = '1.0-SNAPSHOT'
archivesBaseName = 'OverlayPoc'

minecraft {
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                overlaypoc {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                overlaypoc {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'overlaypoc', '--all', '--output', file('src/generated/resources/')

            mods {
                overlaypoc {
                    source sourceSets.main
                }
            }
        }
    }

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200119-1.14.4'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    jcenter()
    mavenCentral()
    google()
    maven {
        name 'ForgeFS'
        url 'https://files.minecraftforge.net/maven'
    }
}

dependencies {
    shadow group: 'org.zeromq', name: 'jeromq', version: '0.5.2'
    shadow 'com.google.code.gson:gson:2.8.6'
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.23'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Overlay POC",
                "Specification-Vendor"    : "Dunkel Web Services",
                "Specification-Version"   : version, // We are version 1 of ourselves
                "Implementation-Title"    : 'overlay-poc',
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "Dunkel Web Services",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    dependsOn shadowJar

    enabled = false
}

shadowJar {
    archiveName = tasks.jar.archiveName
    configurations = [project.configurations.shadow]
    relocate 'org.zeromq', 'live.moonmoon.zeromq'
    relocate 'com.google.gson', 'live.moonmoon.gson'
}

processResources {
    inputs.property "version", version
    inputs.property "MCversion", minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': version, 'MCversion': minecraft_version, 'forge_version': forge_version_toml
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}
